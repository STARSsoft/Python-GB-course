'''
2. В большой текстовой строке подсчитать количество встречаемых
слов и вернуть 10 самых частых. Не учитывать знаки препинания
и регистр символов. За основу возьмите любую статью
из википедии или из документации к языку.

'''
big_string="""
Python — стабильный и распространённый язык.
Он используется во многих проектах и в различных качествах: как основной язык программирования или для создания расширений и интеграции приложений.
На Python реализовано большое количество проектов, также он активно используется для создания прототипов будущих программ.
Python является лёгким в изучении языком, и часто изучается как первый язык[26], в том числе используется при обучении детей программированию[185].
Как первый язык он хорошо подходит, поскольку программы на нём близки к естественному языку, на котором люди привыкли думать,
а для написания корректной программы требуется минимальное количество ключевых слов. В других же языках, таких как C++,
существует большое количество различных синтаксических конструкций и элементов языка, которым приходится уделять внимание вместо изучения алгоритмов[133].
Являясь приложением с открытым исходным кодом, интерпретатор Python используется по всему миру и поставляется в составе операционных систем на базе Linux,
а также в компьютерах от фирмы Apple. Python популярен среди индивидуальных разработчиков, но также используется крупными компаниями в достаточно серьёзных продуктах, 
ориентированных на получение прибыли[186]. На Python написан Reddit[45]. В Dropbox также активно применяется Python, 
а из-за сложностей динамической типизации и огромного количества кода компания перешла к статической типизации с помощью открытого проекта Mypy[187] 
Также Python активно используется в Facebook[188] и Instagram[189]. Многие компании используют Python для тестирования аппаратного обеспечения,
среди этих компаний значатся Intel, Cisco, Hewlett-Packard и IBM. Industrial Light & Magic и Pixar используют его при создании анимационных фильмов[186].
Язык активно используется компанией Google в её поисковой системе, а Youtube в значительной степени написан с использованием Python[186][190]. 
Кроме того, Google спонсирует разработку Python с 2010 года[191][192], и поддержку PyPI, основной системы распространения пакетов для Python[191][193].
Сильными сторонами Python являются его модульность и возможность интегрироваться с другими языками программирования, 
в том числе в составе сложных комплексных приложений и систем[194]. Сочетание простоты и лаконичности с большим количеством возможностей делает 
Python удобным в качестве скриптового языка[источник не указан 885 дней]. Многие проекты предоставляют прикладной интерфейс программирования на Python 
для написания скриптов, например, среды 3D-моделирования Autodesk Maya[186], Blender[195] и Houdini[196], а также свободная геоинформационная система QGIS[197]. 
Некоторые проекты реализуют базовую часть на более производительных языках программирования, а для упрощения работы предоставляют полноценный интерфейс прикладного программирования на Python[источник не указан 885 дней]. 
Так, движок свободного видеоредактора OpenShot реализован в виде библиотеки libopenshot, написанной на C++ с использованием библиотек на Си, 
а все возможности полностью покрыты прикладным интерфейсом программирования Python[198][значимость факта?]. 
Агентство национальной безопасности США использует Python для анализа данных, а NASA использует его при выполнении научных задач[186]. 
Из инструментов, используемых в NASA, можно отметить свободный графический симулятор сети GNS3[en], который также хорошо зарекомендовал себя в корпоративной среде и используется в технологических компаниях, например, в Intel[199]. На Python написана также свободная популярная программа нарезки 3D моделей для печати на 3D-принтерах Cura[200][201].
Python с пакетами NumPy, SciPy и MatPlotLib активно используется как универсальная среда для научных расчётов в качестве замены распространённым специализированным коммерческим пакетам, таким как Matlab, предоставляя аналогичную функциональность и более низкий порог вхождения[202]. По большей части на Python написана также графическая программа Veusz  (англ.)рус.[203], позволяющая создавать качественные графики, готовые для размещения в научных публикациях[204][значимость факта?]. Библиотека Astropy — популярный инструмент для астрономических расчётов[205][значимость факта?].
Также Python подходит для выполнения нестандартных или сложных задач в системах сборки проектов, что обусловлено отсутствием необходимости предварительной компиляции исходных файлов. В проекте Google Test он используется для генерации исходного кода mock-объектов для классов языка C++[206][значимость факта?].
Интерпретатор Python может использоваться в качестве мощной командной оболочки и скриптового языка для написания командных файлов ОС. 
Лёгкость обращения из Python-скриптов к внешним программам и наличие библиотек, дающих доступ к управлению системой,
делают Python удобным инструментом для системного администрирования[207]. Он широко используется для этой цели на платформе Linux: обычно Python поставляется с системой, во многих дистрибутивах инсталляторы и визуальный интерфейс системных утилит написаны именно на Python. Используется он и в администрировании других Unix-систем, в частности, в Solaris и macOS[207]. Кроссплатформенность самого языка и библиотек делает его привлекательным для унифицированной автоматизации задач системного администрирования в гетерогенных средах, где совместно применяются компьютеры с операционными системами различных типов.
Будучи языком общего назначения Python применим почти во всех сферах деятельности. 
Фактически Python используется практически любой солидной компанией тем или иным образом как для выполнения текущих задач, так и в тестировании,
администрировании или в разработке программных продуктов[186].

"""

symbols="1234567890-—/\[]().:><,!?""''"
for symbol in symbols: big_string=big_string.replace(symbol," ")
big_string=big_string.lower()
my_list=big_string.split()
my_dict=dict()
for word in my_list:
    if my_dict.get(word)==None: my_dict[word]=1
    else: my_dict[word]+=1

sorted_dict = sorted(my_dict.items(), key=lambda x: x[1], reverse=True)
print(sorted_dict[:10])